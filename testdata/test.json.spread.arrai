{
  |description, name, type|
  (
    {},
    'TestComplexArrayItem',
    (
      key: (
        primitive: 'string',
      ),
      value: (
        pointer: true,
        typeRef: 'TestComplexArrayItemValue',
      ),
    ),
  ),
  (
    {},
    'TestComplexArrayItemValue',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'Prop1',
          {
            |name, value|
            ('json', 'prop1,omitempty'),
            ('yaml', 'prop1,omitempty'),
          },
          (
            pointer: true,
            primitive: 'string',
          ),
        ),
      },
      required: {},
    ),
  ),
  (
    {},
    'TestObj',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'EmptyArray1',
          {
            |name, value|
            ('json', 'emptyArray1,omitempty'),
            ('yaml', 'emptyArray1,omitempty'),
          },
          (
            items: (
              primitive: 'interface{}',
            ),
            pointer: true,
          ),
        ),
        (
          {},
          'EmptyArray2',
          {
            |name, value|
            ('json', 'emptyArray2,omitempty'),
            ('yaml', 'emptyArray2,omitempty'),
          },
          (
            items: (
              primitive: 'interface{}',
            ),
            pointer: true,
          ),
        ),
        (
          {},
          'EmptyObject1',
          {
            |name, value|
            ('json', 'emptyObject1,omitempty'),
            ('yaml', 'emptyObject1,omitempty'),
          },
          (
            fields: {},
            pointer: true,
          ),
        ),
        (
          {},
          'EmptyObject2',
          {
            |name, value|
            ('json', 'emptyObject2,omitempty'),
            ('yaml', 'emptyObject2,omitempty'),
          },
          (
            fields: {},
            pointer: true,
            required: {},
          ),
        ),
        (
          {},
          'JustString',
          {
            |name, value|
            ('json', 'justString,omitempty'),
            ('yaml', 'justString,omitempty'),
          },
          (
            pointer: true,
            primitive: 'string',
          ),
        ),
        (
          {},
          'MapObject',
          {
            |name, value|
            ('json', 'mapObject,omitempty'),
            ('yaml', 'mapObject,omitempty'),
          },
          (
            key: (
              primitive: 'string',
            ),
            pointer: true,
            value: (
              pointer: true,
              typeRef: 'TestObjMapObjectValue',
            ),
          ),
        ),
        (
          {},
          'MapObjectWithDifferentPattern',
          {
            |name, value|
            ('json', 'mapObjectWithDifferentPattern,omitempty'),
            ('yaml', 'mapObjectWithDifferentPattern,omitempty'),
          },
          (
            key: (
              primitive: 'string',
            ),
            pointer: true,
            value: (
              pointer: true,
              typeRef: 'TestObjMapObjectWithDifferentPatternValue',
            ),
          ),
        ),
        (
          {},
          'MapOfEmptyObject',
          {
            |name, value|
            ('json', 'mapOfEmptyObject,omitempty'),
            ('yaml', 'mapOfEmptyObject,omitempty'),
          },
          (
            key: (
              primitive: 'string',
            ),
            pointer: true,
            value: (
              fields: {},
              required: {},
            ),
          ),
        ),
        (
          {},
          'ObjectWithField',
          {
            |name, value|
            ('json', 'objectWithField,omitempty'),
            ('yaml', 'objectWithField,omitempty'),
          },
          (
            items: (
              pointer: true,
              typeRef: 'TestObjObjectWithFieldItem',
            ),
            pointer: true,
          ),
        ),
        (
          {},
          'RequiredEmptyObject',
          {
            |name, value|
            ('json', 'requiredEmptyObject,omitempty'),
            ('yaml', 'requiredEmptyObject,omitempty'),
          },
          (
            fields: {},
            pointer: {},
          ),
        ),
        (
          {},
          'RequiredObjectWithField',
          {
            |name, value|
            ('json', 'requiredObjectWithField,omitempty'),
            ('yaml', 'requiredObjectWithField,omitempty'),
          },
          (
            items: (
              pointer: true,
              typeRef: 'TestObjRequiredObjectWithFieldItem',
            ),
            pointer: {},
          ),
        ),
        (
          {},
          'RequiredString',
          {
            |name, value|
            ('json', 'requiredString,omitempty'),
            ('yaml', 'requiredString,omitempty'),
          },
          (
            pointer: {},
            primitive: 'string',
          ),
        ),
      },
      required: {'requiredEmptyObject', 'requiredObjectWithField', 'requiredString'},
    ),
  ),
  (
    {},
    'TestObjMapObjectValue',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'Prop1',
          {
            |name, value|
            ('json', 'prop1,omitempty'),
            ('yaml', 'prop1,omitempty'),
          },
          (
            pointer: true,
            primitive: 'string',
          ),
        ),
        (
          {},
          'Prop2',
          {
            |name, value|
            ('json', 'prop2,omitempty'),
            ('yaml', 'prop2,omitempty'),
          },
          (
            items: (
              primitive: 'string',
            ),
            pointer: true,
          ),
        ),
      },
      required: {},
    ),
  ),
  (
    {},
    'TestObjMapObjectWithDifferentPatternValue',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'Prop1',
          {
            |name, value|
            ('json', 'prop1,omitempty'),
            ('yaml', 'prop1,omitempty'),
          },
          (
            pointer: true,
            primitive: 'float',
          ),
        ),
      },
      required: {},
    ),
  ),
  (
    {},
    'TestObjObjectWithFieldItem',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'Prop1',
          {
            |name, value|
            ('json', 'prop1,omitempty'),
            ('yaml', 'prop1,omitempty'),
          },
          (
            pointer: true,
            primitive: 'string',
          ),
        ),
      },
      required: {},
    ),
  ),
  (
    {},
    'TestObjRequiredObjectWithFieldItem',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'Prop1',
          {
            |name, value|
            ('json', 'prop1,omitempty'),
            ('yaml', 'prop1,omitempty'),
          },
          (
            pointer: true,
            primitive: 'string',
          ),
        ),
      },
      required: {},
    ),
  ),
  (
    'testdata',
    'Test',
    (
      fields: {
        |description, name, tags, type|
        (
          {},
          'Boolean',
          {
            |name, value|
            ('json', 'boolean,omitempty'),
            ('yaml', 'boolean,omitempty'),
          },
          (
            pointer: true,
            primitive: 'bool',
          ),
        ),
        (
          {},
          'ComplexArray',
          {
            |name, value|
            ('json', 'complexArray,omitempty'),
            ('yaml', 'complexArray,omitempty'),
          },
          (
            items: (
              pointer: true,
              typeRef: 'TestComplexArrayItem',
            ),
            pointer: true,
          ),
        ),
        (
          {},
          'Integer',
          {
            |name, value|
            ('json', 'integer,omitempty'),
            ('yaml', 'integer,omitempty'),
          },
          (
            pointer: true,
            primitive: 'int',
          ),
        ),
        (
          {},
          'Number',
          {
            |name, value|
            ('json', 'number,omitempty'),
            ('yaml', 'number,omitempty'),
          },
          (
            pointer: true,
            primitive: 'float',
          ),
        ),
        (
          {},
          'Obj',
          {
            |name, value|
            ('json', 'obj,omitempty'),
            ('yaml', 'obj,omitempty'),
          },
          (
            pointer: true,
            typeRef: 'TestObj',
          ),
        ),
        (
          {},
          'String',
          {
            |name, value|
            ('json', 'string,omitempty'),
            ('yaml', 'string,omitempty'),
          },
          (
            pointer: true,
            primitive: 'string',
          ),
        ),
        (
          'array example',
          'Arr',
          {
            |name, value|
            ('json', 'arr,omitempty'),
            ('yaml', 'arr,omitempty'),
          },
          (
            items: (
              primitive: 'string',
            ),
            pointer: true,
          ),
        ),
      },
      required: {},
    ),
  ),
}